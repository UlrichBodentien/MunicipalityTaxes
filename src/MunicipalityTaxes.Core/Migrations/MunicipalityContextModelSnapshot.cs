// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MunicipalityTaxes.Core.Model;

namespace MunicipalityTaxes.Core.Migrations
{
    [DbContext(typeof(MunicipalityContext))]
    partial class MunicipalityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MunicipalityTaxes.Core.Model.Municipality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Municipality");
                });

            modelBuilder.Entity("MunicipalityTaxes.Core.Model.MunicipalityTax", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MunicipalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.Property<int>("TaxTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("TaxTypeId", "StartDate", "MunicipalityId")
                        .IsUnique();

                    b.ToTable("MunicipalityTax");
                });

            modelBuilder.Entity("MunicipalityTaxes.Core.Model.MunicipalityTaxType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MunicipalityTaxType");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Daily"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Weekly"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Monthly"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Yearly"
                        });
                });

            modelBuilder.Entity("MunicipalityTaxes.Core.Model.MunicipalityTax", b =>
                {
                    b.HasOne("MunicipalityTaxes.Core.Model.Municipality", "Municipality")
                        .WithMany("Taxes")
                        .HasForeignKey("MunicipalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MunicipalityTaxes.Core.Model.MunicipalityTaxType", "TaxType")
                        .WithMany()
                        .HasForeignKey("TaxTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
